{"version":3,"file":"static/js/118.42e42095.chunk.js","mappings":"uQAKe,SAASA,IAAS,IAADC,EAC9BC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAiC,QAA5BP,EAAGK,EAAaG,IAAI,gBAAQ,IAAAR,EAAAA,EAAI,GAC3CS,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAjCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA0BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCR,EAAAA,EAAAA,WAAS,GAAMS,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA+B9B,OAlBAG,EAAAA,EAAAA,YAAU,WAIe,SAAAC,IAWtB,OAXsBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAvB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGuB,OAHvBF,EAAAC,KAAA,EAEIZ,GAAS,GACTI,GAAa,GAAMO,EAAAE,KAAA,GACOC,EAAAA,EAAAA,IAAYxB,GAAO,KAAD,EAAtCoB,EAAWC,EAAAI,KACjBnB,EAAUc,EAAYM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE/BX,GAAS,GAAM,QAEK,OAFLW,EAAAC,KAAA,GAEfR,GAAa,GAAOO,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,CAda,KAAV/B,GAEH,WACsBgB,EAAAc,MAAC,KAADC,UAAA,CAYvBC,EACF,GAAG,CAAChC,KAEFiC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,SA9BW,SAAAC,GACnBA,EAAEC,gBAIF,IAAQC,EAAUF,EAAEG,OAAOC,SAASzC,MAA5BuC,MACJA,GACFxC,EAAgB,CAAEC,MAAOuC,GAE7B,EAqBiCJ,SAAA,EAC3BO,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,aAAa,MAAMC,WAAS,EAACC,KAAK,UACrDJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQR,SAAC,cAEvBtB,IAAa6B,EAAAA,EAAAA,KAACK,EAAAA,EAAM,IACpBtC,IAASiC,EAAAA,EAAAA,KAAA,KAAAP,SAAI1B,IACbJ,EAAO2C,OAAS,IAAKN,EAAAA,EAAAA,KAAA,OAAAP,SAAK,aAGjC,C","sources":["pages/MoviePage/Movie.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import toast from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovies } from 'services/api';\nexport default function Movie() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  // const searchChange = (evt) => setSearchParams({ query: evt.target.value });\n\n  const handleSubmit = e => {\n    e.preventDefalt();\n    // const form = e.currentTarget;\n    // setSearchParams({ query: e.target.value });\n    // form.reset();\n    const { value } = e.target.elements.query;\n    if (value) {\n      setSearchParams({ query: value });\n    }\n  };\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function getMovie() {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const findedMovie = await fetchMovies(query);\n        setMovies(findedMovie.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovie();\n  }, [query]);\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" autoComplete=\"off\" autoFocus name=\"name\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {movies.length > 0 && <div>Movies</div>}\n    </>\n  );\n}\n"],"names":["Movie","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","_getMovie","_asyncToGenerator","_regeneratorRuntime","_callee","findedMovie","_context","prev","next","fetchMovies","sent","results","t0","finish","stop","apply","arguments","getMovie","_jsxs","_Fragment","children","onSubmit","e","preventDefalt","value","target","elements","_jsx","type","autoComplete","autoFocus","name","Loader","length"],"sourceRoot":""}