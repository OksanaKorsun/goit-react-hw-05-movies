{"version":3,"file":"static/js/291.05d2e852.chunk.js","mappings":"+RAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0BAEzBC,EAAOJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kDAKhBG,EAAQN,EAAAA,GAAAA,GAASO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4B,kBCLf,SAASK,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAiBxB,OAhBAG,EAAAA,EAAAA,YAAU,WAEuB,SAAAC,IAW9B,OAX8BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA/B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGoB,OAHpBF,EAAAC,KAAA,EAEIZ,GAAa,GACbJ,GAAS,GAAOe,EAAAE,KAAA,GACYC,EAAAA,EAAAA,MAAsB,KAAD,EAA3CJ,EAAaC,EAAAI,KACnBX,GAAU,SAAAY,GAAU,SAAAC,QAAAC,EAAAA,EAAAA,GAAQF,IAAUE,EAAAA,EAAAA,GAAKR,EAAcS,SAAO,IAAGR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEnEf,GAAS,GAAM,QAEK,OAFLe,EAAAC,KAAA,GAEfZ,GAAa,GAAOW,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,yBAEvBc,MAAA,KAAAC,UAAA,EAZD,WAC+BlB,EAAAiB,MAAC,KAADC,UAAA,CAY/BC,EACF,GAAG,KAEDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACH7B,IAAa8B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpBnC,IAASkC,EAAAA,EAAAA,KAAA,KAAAD,SAAIjC,KACdkC,EAAAA,EAAAA,KAAC7C,EAAI,CAAA4C,SACFzB,EAAO4B,KAAI,SAAAC,GAA6B,IAA1BC,EAAcD,EAAdC,eAAgBC,EAAEF,EAAFE,GAG7B,OACEL,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAClD,EAAU,CAACwD,GAAE,UAAAlB,OAAYiB,GAAME,MAAO,CAACC,KAAMhD,GAAUuC,UACtDC,EAAAA,EAAAA,KAAC3C,EAAK,CAAA0C,SAAEK,OAFHC,EAMb,QAIR,C","sources":["pages/HomePage/Home.styled.js","pages/HomePage/Home.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n color: #1E10E4 `;\nexport const List = styled.ul`\n  padding: 0 40px;\n  font-size: 14px;\n`;\n\nexport const Title = styled.h4`\n  margin: 8px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { LinkStyled, List, Title } from './Home.styled';\nimport { useLocation } from 'react-router-dom';\nexport default function Home() {\n  const location = useLocation();\n  \n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    // const abortController = new AbortController();\n    async function getTrendingFilms() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const trengingFilms = await fetchTrendingMovies();\n        setMovies(prevMovies => [...prevMovies, ...trengingFilms.results]);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getTrendingFilms();\n  }, []);\n  return (\n    <>\n      <h2>Trending today</h2>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      <List>\n        {movies.map(({ original_title, id }) => {\n          // const BASE_URL = 'https://image.tmdb.org/t/p/w200';\n          // const photo = poster_path ? BASE_URL + poster_path : null;\n          return (\n            <li key={id}>\n              <LinkStyled to={`/movie/${id}`} state={{from: location}}>\n                <Title>{original_title}</Title>\n              </LinkStyled>\n            </li>\n          );\n        })}\n      </List>\n    </>\n  );\n}\n"],"names":["LinkStyled","styled","Link","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Title","_templateObject3","Home","location","useLocation","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","movies","setMovies","useEffect","_getTrendingFilms","_asyncToGenerator","_regeneratorRuntime","_callee","trengingFilms","_context","prev","next","fetchTrendingMovies","sent","prevMovies","concat","_toConsumableArray","results","t0","finish","stop","apply","arguments","getTrendingFilms","_jsxs","_Fragment","children","_jsx","Loader","map","_ref","original_title","id","to","state","from"],"sourceRoot":""}